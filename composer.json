{
  "name": "phpwatch/phpwatch",
  "description": "PHP Watch - Self hosting observe/logging solution for small & middle size websites",
  "authors": [
    {
      "name": "Tim LochmÃ¼ller",
      "email": "tim@fruit-lab.de"
    }
  ],
  "config": {
    "optimize-autoloader": true
  },
  "require": {
    "php": ">7.0.0",
    "ext-pdo": "*",
    "jonnyreeves/js-logger": "v1.5.0",
    "doctrine/dbal": "^2.8",
    "twig/twig": "^2.5",
    "slim/slim": "^3.11",
    "slim/twig-view": "^2.4",
    "adbario/slim-secure-session-middleware": "^1.3",
    "monolog/monolog": "^1.23",
    "doctrine/migrations": "^2.0",
    "symfony/yaml": "^4.1",
    "nochso/html-compress-twig": "^2.0",
    "comsolit/html-builder": "^1.0",
    "phpfastcache/phpfastcache": "^7.0",
    "guzzlehttp/guzzle": "^6.3",
    "dragonmantank/cron-expression": "^2.2"
  },
  "require-dev": {
    "friendsofphp/php-cs-fixer": "^2.14",
    "phpunit/phpunit": "^7"
  },
  "autoload": {
    "psr-4": {
      "PhpWatch\\": "src/"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "PhpWatchTest\\": "tests/"
    }
  },
  "repositories": [
    {
      "type": "package",
      "package": {
        "name": "jonnyreeves/js-logger",
        "version": "v1.5.0",
        "dist": {
          "url": "https://github.com/jonnyreeves/js-logger/archive/1.5.0.zip",
          "type": "zip"
        }
      }
    }
  ],
  "scripts": {
    "post-update-cmd": [
      "@phpwatch:clear-cache",
      "@phpwatch:migrate-db"
    ],
    "post-install-cmd": [
      "@phpwatch:clear-cache",
      "@phpwatch:migrate-db"
    ],
    "phpwatch:migrate-db": [
      "@php ./vendor/bin/doctrine-migrations migrations:migrate --no-interaction --configuration config/migration.yml --db-configuration config/migration-config.php"
    ],
    "phpwatch:clear-cache": [
      "rm -rf ./var/tmp/",
      "rm -rf ./var/phpdoc/"
    ],
    "phpwatch:update": [
      "git pull",
      "composer install"
    ],
    "phpwatch:dev": [
      "@phpwatch:dev:hooks",
      "@phpwatch:dev:test",
      "@phpwatch:dev:php-cs-fixer",
      "@phpwatch:dev:server"
    ],
    "phpwatch:dev:test": [
      "@php ./vendor/bin/phpunit --bootstrap vendor/autoload.php tests/"
    ],
    "phpwatch:dev:hooks": [
      "rm -rf .git/hooks",
      "ln -s ../config/hooks .git/hooks"
    ],
    "phpwatch:dev:php-cs-fixer": [
      "@php ./vendor/bin/php-cs-fixer fix --config config/php-cs.php --cache-file config/php_cs.cache"
    ],
    "phpwatch:dev:server": [
      "echo 'Run: php -S localhost:8087 -t web web/index.php'"
    ],
    "phpwatch:dev:phpdoc": [
      "docker run --rm -v $(pwd):/data phpdoc/phpdoc -d src -t var/phpdoc"
    ],
    "phpwatch:cron": [
      "@php web/index.php"
    ]
  },
  "scripts-descriptions": {
    "phpwatch:migrate-db": "Run the DB migrations and set the DB to the highest migration version.",
    "phpwatch:clear-cache": "Clear the caches.",
    "phpwatch:update": "Update the current installation to the current git version. Trigger git update, composer install incl. post-install-cmd.",
    "phpwatch:dev": "Start development and execute subscripts in the right order.",
    "phpwatch:dev:test": "Run all PHPUnit tests.",
    "phpwatch:dev:hooks": "Install development hooks for using git in the right way.",
    "phpwatch:dev:php-cs-fixer": "Execute PHP CS fixer to cleanup the current code.",
    "phpwatch:dev:server": "Start a PHP server on port 8087 so you can use the application with http://localhost:8087/.",
    "phpwatch:dev:phpdoc": "Generate PHPdoc files via docker",
    "phpwatch:cron": "Run cron command"
  }
}
